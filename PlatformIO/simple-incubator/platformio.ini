; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; PlatformIO Core (CLI) settings:
[platformio]
default_envs = incubator ; Default build target

; Common settings for all environments
[env]
platform = atmelavr
framework = arduino

; TARGET SETTINGS
; Chip in use
board = diecimilaatmega328
; Clock frequency in [Hz]
board_build.f_cpu = 8000000L

; BUILD OPTIONS
; Comment out to enable LTO (this line unflags it)
;build_unflags = -flto
; Extra build flags
build_flags = 

; SERIAL MONITOR OPTIONS
; Serial monitor port defined in the Upload_UART environment
monitor_port = ${env:Upload_UART.upload_port}
; Serial monitor baud rate
monitor_speed = 9600

[env:incubator]
platform = atmelavr
board = diecimilaatmega328
framework = arduino
; Uploader
; USBTinyISP
upload_protocol = usbtiny
; FTDI (USB)
;upload_protocol = ftdi
;upload_protocol = arduino-ft232r
;upload_protocol = diecimila

; change microcontroller
board_build.mcu = atmega328p
upload_flags = -e

lib_extra_dirs =
  include/hack/libraries
  include
;  lib/hack/libraries
lib_deps = 
	greiman/ChNil@^2017.8.2
	;nullboundary/SST25VF@^0.1.0
; Serial Monitor options
monitor_flags = --echo
;monitor_filters = log2file, default

[env:program_via_USBtinyISP_MiniCore]
platform = atmelavr
framework = arduino
board = diecimilaatmega328
upload_protocol = custom
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -v
    -p
    atmega328p
    -c
    usbtiny
upload_command = avrdude $UPLOAD_FLAGS -e -Ulock:w:0x3F:m -Uefuse:w:0b11111111:m -Uhfuse:w:0b11010110:m -Ulfuse:w:0xe2:m && avrdude $UPLOAD_FLAGS -U flash:w:${platformio.boards_dir}/optiboot_flash_atmega328p_UART0_38400_8000000L_B5.hex:i -Ulock:w:0x0F:m 

; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


; Please visit documentation for the other options and examples
; https://github.com/MCUdude/MiniCore/blob/master/PlatformIO.md


; Run the following command to upload with this environment
; pio run -e Upload_ISP -t upload
[env:Upload_ISP]
; Custom upload procedure
upload_protocol = custom
; Avrdude upload flags
upload_flags =
  -C$PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf
  -p$BOARD_MCU
  -PUSB
  -cusbtiny
; Avrdude upload command
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:fuses_bootloader]
board_hardware.oscillator = internal ; Oscillator type
board_hardware.uart = uart0          ; Set UART to use for serial upload
board_bootloader.speed = 38400      ; Set bootloader baud rate
board_hardware.bod = disabled            ; Set brown-out detection
board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
upload_protocol = usbtiny             ; Use the USBasp as programmer
upload_flags =                       ; Enable echo
  -e
